var search_data = {"index":{"searchIndex":["object","upnpaction","upnpargument","upnpdevice","upnpicon","upnprootdevice","upnpservice","upnpstatevariable","addaction()","addargument()","adddevice()","addservice()","addstatevariable()","byebye()","createalivemessage()","createbyebyemessage()","createsearchresponse()","devicemessages()","devicexmldescription()","handlesearch()","keepalive()","new()","new()","new()","new()","new()","new()","new()","servicemessages()"],"longSearchIndex":["object","upnpaction","upnpargument","upnpdevice","upnpicon","upnprootdevice","upnpservice","upnpstatevariable","upnpservice#addaction()","upnpaction#addargument()","upnprootdevice#adddevice()","upnpdevice#addservice()","upnpservice#addstatevariable()","upnprootdevice#byebye()","upnprootdevice#createalivemessage()","upnprootdevice#createbyebyemessage()","upnprootdevice#createsearchresponse()","upnpdevice#devicemessages()","upnpdevice#devicexmldescription()","upnprootdevice#handlesearch()","upnprootdevice#keepalive()","upnpaction::new()","upnpargument::new()","upnpdevice::new()","upnpicon::new()","upnprootdevice::new()","upnpservice::new()","upnpstatevariable::new()","upnpdevice#servicemessages()"],"info":[["Object","","Object.html","",""],["UPnPAction","","UPnPAction.html","",""],["UPnPArgument","","UPnPArgument.html","",""],["UPnPDevice","","UPnPDevice.html","","<p>The base class describing a UPnP device.  Implementations should derive a\nclass from this or #UPnPRootDevice …\n"],["UPnPIcon","","UPnPIcon.html","","<p>Simple structure to hold information about an Icon\n"],["UPnPRootDevice","","UPnPRootDevice.html","",""],["UPnPService","","UPnPService.html","",""],["UPnPStateVariable","","UPnPStateVariable.html","",""],["addAction","UPnPService","UPnPService.html#method-i-addAction","(a)",""],["addArgument","UPnPAction","UPnPAction.html#method-i-addArgument","(arg)",""],["addDevice","UPnPRootDevice","UPnPRootDevice.html#method-i-addDevice","(device)","<p>trivial method to add devices to a root device, it&#39;s just a list.  No\nsupport for removing them. …\n"],["addService","UPnPDevice","UPnPDevice.html#method-i-addService","(service)","<p>trivial method to add a new service to the list of supported ones. \nExpected to be called during setup …\n"],["addStateVariable","UPnPService","UPnPService.html#method-i-addStateVariable","(s)",""],["byeBye","UPnPRootDevice","UPnPRootDevice.html#method-i-byeBye","()","<p>For Step 1 - discovery.  The byeBye process creates a series of messages\nfor each device and service. …\n"],["createAliveMessage","UPnPRootDevice","UPnPRootDevice.html#method-i-createAliveMessage","(nt,usn)","<p>For Step 1 - discovery.  Helper method to create a single message that will\nbe multicast. Called by  …\n"],["createByeByeMessage","UPnPRootDevice","UPnPRootDevice.html#method-i-createByeByeMessage","(nt,usn)","<p>For Step 1 - discovery.  Helper method to create a single message that will\nbe multicast. Called by  …\n"],["createSearchResponse","UPnPRootDevice","UPnPRootDevice.html#method-i-createSearchResponse","(st,usn)","<p>For Step 1 - discovery.  Helper method to create a single message that will\nbe multicast. Called by  …\n"],["deviceMessages","UPnPDevice","UPnPDevice.html#method-i-deviceMessages","()","<p>The UPnP spec specifies (Step 1 - discovery) that a message is sent on\nstartup, periodically, and in …\n"],["deviceXMLDescription","UPnPDevice","UPnPDevice.html#method-i-deviceXMLDescription","()","<p>For Step 2 - description.  Once a client has discovered a device it will\nthen request more detailed information …\n"],["handleSearch","UPnPRootDevice","UPnPRootDevice.html#method-i-handleSearch","(message)","<p>Client devices searching for devices on the network will send a brief\nsearch message via UDP multicast. …\n"],["keepAlive","UPnPRootDevice","UPnPRootDevice.html#method-i-keepAlive","()","<p>For Step 1 - discovery.  The keepAlive process creates a series of messages\nfor each device and service …\n"],["new","UPnPAction","UPnPAction.html#method-c-new","(n)",""],["new","UPnPArgument","UPnPArgument.html#method-c-new","(n,d,s)",""],["new","UPnPDevice","UPnPDevice.html#method-c-new","(name,type,version)","<p>name &mdash; the name of the UPnP device\n<p>type &mdash; the type (should be a UPnP standard e.g. MediaServer)\n<p>version &mdash; UPnP …\n"],["new","UPnPIcon","UPnPIcon.html#method-c-new","(t,w,h,d,p)",""],["new","UPnPRootDevice","UPnPRootDevice.html#method-c-new","(type,version,ip,port,product)",""],["new","UPnPService","UPnPService.html#method-c-new","(t, v)",""],["new","UPnPStateVariable","UPnPStateVariable.html#method-c-new","(n, t, dv, av, amx, amn, ai)",""],["serviceMessages","UPnPDevice","UPnPDevice.html#method-i-serviceMessages","()","<p>Similar helper method to that for #deviceMessages\n"]]}}